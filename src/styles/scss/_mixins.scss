@use 'variables' as *;
//FONT
@mixin font($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff2") format("woff2"), url("../fonts/#{$file_name}.woff") format("woff");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}
//ADAPTIVE PROPERTY
@mixin adaptive-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//IF SMALLER THAN THE CONTAINER
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//IF LARGER THAN THE CONTAINER
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//ALWAYS
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
//ADAPRIVE PROPERTY UNTILL
@mixin adaptiv-value-to($property, $startSize, $minSize, $minWidth) {
	$addSize: $startSize - $minSize;
	//#{$property}: $minSize + px;
	@media (min-width: #{$minWidth + px}) {
		#{$property}: calc(
			#{$minSize + px} + #{$addSize} * (((100vw - #{$minWidth + px})) / ((#{$maxWidth - $minWidth})))
		);
	}
}
